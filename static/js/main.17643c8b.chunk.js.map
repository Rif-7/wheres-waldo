{"version":3,"sources":["components/Navbar.js","components/Selector.js","components/ImgContainer.js","components/SetUser.js","components/GameResult.js","components/Leaderboard.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","alt","src","options","Selector","_ref","makeMove","gameState","_useState","useState","_useState2","Object","slicedToArray","selectorClass","setSelectorClass","_useState3","x","y","_useState4","cords","setCords","_useState5","_useState6","showFound","setShowFound","_useState7","_useState8","foundInfo","setFoundInfo","_useState9","_useState10","foundClass","setFoundClass","useEffect","setTimeout","selectorStyle","left","top","selectOption","_x","_selectOption","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee","e","name","wrap","_context","prev","next","target","getAttribute","sent","stop","onClick","includes","_ref2","nativeEvent","offsetX","offsetY","updateCords","style","map","option","index","data-value","key","clicked","pointerEvents","backgroundColor","ImgContainer","gameStarted","imgUrl","components_Selector","SetUser","timeUser","toggleLeaderboard","username","setUsername","contentStyle","setContentStyle","htmlFor","type","id","onChange","value","textContent","GameResult","secondsTaken","startNewGame","window","scrollTo","behavior","Leaderboard","getLeaderboard","leaderboardData","setLeaderboardData","boardStatus","setBoardStatus","data","length","timeTaken","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","waldoPos","woof","odlaw","waldo","App","userId","setUserId","setGameStarted","showSetUp","setShowSetUp","gameResult","setGameResult","showLeaderboard","setShowLeaderboard","_useState11","_useState12","setGameState","setEndTime","_setEndTime","_callee2","userRef","_context2","doc","updateDoc","endTime","serverTimestamp","then","console","log","catch","err","checkPosition","_x2","_x3","_checkPosition","_callee3","userX","userY","charId","charRef","charSnap","distance","_context3","getDoc","Math","sqrt","pow","abrupt","_makeMove","_callee4","newGameState","_context4","assign","endGame","_endGame","_callee5","userDoc","startTime","_context5","res","round","_getLeaderboard","_callee6","resultRef","resultDocs","results","sortedArray","_context6","query","collection","where","getDocs","forEach","_doc$data","push","toFixed","sort","b","keys","every","components_Navbar","components_SetUser","addDoc","components_GameResult","components_Leaderboard","components_ImgContainer","_x4","_x5","_x6","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"oOAyBeA,MAvBf,WACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,iBAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,GAAGD,UAAU,UAAUE,IAAI,oBACpCL,EAAAC,EAAAC,cAAA,oBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,GAAGD,UAAU,UAAUE,IAAI,qBACpCL,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,GAAGD,UAAU,UAAUE,IAAI,qBACpCL,EAAAC,EAAAC,cAAA,wBChBJI,EAAU,CAAC,QAAS,QAAS,QAsFpBC,MApFf,SAAAC,GAA2C,IAAvBC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,UAC5BC,EAA0CC,mBACxC,oCADFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAsBI,EAAtBJ,EAAA,GAGAK,EAA0BN,mBAAS,CAAEO,EAAG,EAAGC,EAAG,IAA9CC,EAAAP,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOI,EAAPD,EAAA,GAAcE,EAAdF,EAAA,GACAG,EAAkCZ,oBAAS,GAA3Ca,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAAOE,EAAPD,EAAA,GAAkBE,EAAlBF,EAAA,GACAG,EAAkChB,qBAAlCiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAAOE,EAAPD,EAAA,GAAkBE,EAAlBF,EAAA,GACAG,EAAoCpB,mBAAS,yBAA7CqB,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAAOE,EAAPD,EAAA,GAAmBE,EAAnBF,EAAA,GAEAG,oBAAU,WACJV,GACFW,WAAW,kBAAMV,GAAa,IAAQ,MAEvC,CAACD,IAOJ,IAAMY,EAAgB,CACpBC,KAAMjB,EAAK,EAAQ,GACnBkB,IAAKlB,EAAK,EAAQ,IAtBqB,SAqC1BmB,EArC0BC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,WAAA,SAAAH,IAAA,OAAAA,EAAA7B,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAA/C,EAAAgD,KAqCzC,SAAAC,EAA4BC,GAA5B,IAAAC,EAAA,OAAAJ,EAAA/C,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACQJ,EAAOD,EAAEM,OAAOC,aAAa,cADrCJ,EAAAE,KAAA,EAEuB/C,EAASa,EAAK,EAAOA,EAAK,EAAO8B,GAFxD,OAAAE,EAAAK,MAII5B,EAAa,aAAeqB,GAC5BjB,EAAc,iBAEdJ,EAAaqB,EAAO,gBACpBjB,EAAc,0BAEhBR,GAAa,GAVf,wBAAA2B,EAAAM,SAAAV,OArCyCN,MAAAC,KAAAC,WAqDzC,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB0D,QA7BlC,SAAqBV,GAEdnC,EAAc8C,SAAS,oBAM5B7C,EAAiB,oBAlBnB,SAAqBkC,GACnB,IAAAY,EAAuB,CAACZ,EAAEa,YAAYC,QAASd,EAAEa,YAAYE,SAC7D3C,EAAS,CAAEJ,EADX4C,EAAA,GACqB3C,EADrB2C,EAAA,KAkBAI,CAAYhB,IANVlC,EAAiB,sCA2BhBS,EACC1B,EAAAC,EAAAC,cAAA,OAAKC,UAAW+B,EAAYkC,MAAO9B,GAChCR,GAED,KACJ9B,EAAAC,EAAAC,cAAA,OAAKC,UAAWa,EAAeoD,MAAO9B,GACpCtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEZG,EAAQ+D,IAAI,SAACC,EAAQC,GACpB,OACEvE,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVqE,aAAYF,EACZT,QAASpB,EACTgC,IAAKF,EAELH,OAtBOM,EAsBYhE,EAAU4D,GArBzCI,EAAU,CAAEC,cAAe,OAAQC,gBAAiB,SAAY,KAuBnDN,GAxBK,IAACI,QCxCRG,MAXf,SAAArE,GAAoE,IAA5CC,EAA4CD,EAA5CC,SAAUqE,EAAkCtE,EAAlCsE,YAAapE,EAAqBF,EAArBE,UAAWqE,EAAUvE,EAAVuE,OAClDX,EAAQU,EAAc,GAAK,CAAEH,cAAe,QAElD,OACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBiE,MAAOA,GACpCpE,EAAAC,EAAAC,cAAC8E,EAAD,CAAUvE,SAAUA,EAAUC,UAAWA,IACzCV,EAAAC,EAAAC,cAAA,OAAKG,IAAK0E,EAAQ5E,UAAU,YAAYC,IAAI,uBC2BnC6E,MAlCf,SAAAzE,GAAkD,IAA/B0E,EAA+B1E,EAA/B0E,SAAUC,EAAqB3E,EAArB2E,kBAC3BxE,EAAgCC,mBAAS,IAAzCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOyE,EAAPvE,EAAA,GAAiBwE,EAAjBxE,EAAA,GACAK,EAAwCN,mBAAS,IAAjDS,EAAAP,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOoE,EAAPjE,EAAA,GAAqBkE,EAArBlE,EAAA,GAaA,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUiE,MAAOkB,GAC9BtF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,SAAOsF,QAAQ,aAAf,cACAxF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOuF,KAAK,OAAOC,GAAG,YAAYC,SAjBxC,SAAwBxC,GACtBkC,EAAYlC,EAAEM,OAAOmC,UAiBjB5F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAY0D,QAfpC,SAAoBV,GACD,KAAbiC,IACJG,EAAgB,CAAEZ,cAAe,SACjCxB,EAAEM,OAAOoC,YAAc,UACvBX,EAASE,MAWL,SAGApF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmB0D,QAASsB,GAA9C,kBCIOW,MA9Bf,SAAAtF,GAKG,IAJD4E,EAIC5E,EAJD4E,SACAW,EAGCvF,EAHDuF,aACAC,EAECxF,EAFDwF,aACAb,EACC3E,EADD2E,kBAMA,OAJA/C,oBAAU,WACR6D,OAAOC,SAAS,CAAE1D,IAAK,EAAG2D,SAAU,YACnC,IAGDnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,YAAyCiF,GACzCpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,YACY4F,EADZ,wBAGA/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmB0D,QAASsB,GAA9C,eAGAnF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAW0D,QAASmC,GAAtC,gBCYKI,MAjCf,SAAA5F,GAAuD,IAAhC6F,EAAgC7F,EAAhC6F,eAAgBL,EAAgBxF,EAAhBwF,aACrCrF,EAA8CC,mBAAS,IAAvDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAO2F,EAAPzF,EAAA,GAAwB0F,EAAxB1F,EAAA,GACAK,EAAsCN,mBAAS,cAA/CS,EAAAP,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOsF,EAAPnF,EAAA,GAAoBoF,EAApBpF,EAAA,GAMA,OALAe,oBAAStB,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAA/C,EAAAgD,KAAC,SAAAC,IAAA,IAAAwD,EAAA,OAAA1D,EAAA/C,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACW6C,IADX,OAEY,KADdK,EADEpD,EAAAK,MAECgD,QAAcF,EAAe,wBACtCF,EAAmBG,GAHX,wBAAApD,EAAAM,SAAAV,MAIP,IAEDlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,eACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAY0D,QAASmC,GAAvC,UAIAM,EAAgBK,OAAkC,KAAzB3G,EAAAC,EAAAC,cAAA,UAAKsG,GAC/BF,EAAgBjC,IAAI,SAACqC,EAAMnC,GAC1B,OACEvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBsE,IAAKF,GACrCvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQoE,EAAQ,EAAhC,KADF,IAC8CmC,EAAKtB,UAEnDpF,EAAAC,EAAAC,cAAA,WAAMwG,EAAKE,UAAX,2BCIdC,YATuB,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,gBACnBC,MAAO,+CAKT,IAAMC,EAAKC,cAELC,EAAW,CACfC,KAAM,uBACNC,MAAO,uBACPC,MAAO,wBA+JMC,MA5Jf,WACE,IAAA/G,EAA4BC,mBAAS,IAArCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOgH,EAAP9G,EAAA,GAAe+G,EAAf/G,EAAA,GACAK,EAAsCN,oBAAS,GAA/CS,EAAAP,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAO4D,EAAPzD,EAAA,GAAoBwG,EAApBxG,EAAA,GACAG,EAAkCZ,oBAAS,GAA3Ca,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAAOsG,EAAPrG,EAAA,GAAkBsG,EAAlBtG,EAAA,GACAG,EAAoChB,qBAApCiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAAOoG,EAAPnG,EAAA,GAAmBoG,EAAnBpG,EAAA,GACAG,EAA8CpB,oBAAS,GAAvDqB,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAAOkG,EAAPjG,EAAA,GAAwBkG,EAAxBlG,EAAA,GACAmG,EAAkCxH,mBAAS,CACzC6G,OAAO,EACPD,OAAO,EACPD,MAAM,IAHRc,EAAAvH,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAAO1H,EAAP2H,EAAA,GAAkBC,EAAlBD,EAAA,GANa,SAkCEE,IAlCF,OAAAC,EAAA5F,MAAAC,KAAAC,WAAA,SAAA0F,IAAA,OAAAA,EAAA1H,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAA/C,EAAAgD,KAkCb,SAAAwF,IAAA,IAAAC,EAAA,OAAA1F,EAAA/C,EAAAoD,KAAA,SAAAsF,GAAA,cAAAA,EAAApF,KAAAoF,EAAAnF,MAAA,cACQkF,EAAUE,YAAIxB,EAAI,SAAUO,GADpCgB,EAAAnF,KAAA,EAEQqF,YAAUH,EAAS,CACvBI,QAASC,gBAERC,KAAK,kBAAMC,QAAQC,IAAI,iBACvBC,MAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,KANhC,wBAAAT,EAAA/E,SAAA6E,OAlCa7F,MAAAC,KAAAC,WAAA,SAwDEuG,EAxDF3G,EAAA4G,EAAAC,GAAA,OAAAC,EAAA5G,MAAAC,KAAAC,WAAA,SAAA0G,IAAA,OAAAA,EAAA1I,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAA/C,EAAAgD,KAwDb,SAAAwG,EAA6BC,EAAOC,EAAOvG,GAA3C,IAAAwG,EAAAC,EAAAC,EAAA/F,EAAA5C,EAAAC,EAAA2I,EAAA,OAAA/G,EAAA/C,EAAAoD,KAAA,SAAA2G,GAAA,cAAAA,EAAAzG,KAAAyG,EAAAxG,MAAA,cACQoG,EAAStC,EAASlE,GAClByG,EAAUjB,YAAIxB,EAAI,YAAawC,GAFvCI,EAAAxG,KAAA,EAGyByG,YAAOJ,GAHhC,cAGQC,EAHRE,EAAArG,KAAAI,EAIiB,CAAC+F,EAASpD,OAAO,UAAWoD,EAASpD,OAAO,WAApDvF,EAJT4C,EAAA,GAIY3C,EAJZ2C,EAAA,IAKQgG,EAAWG,KAAKC,KAAKD,KAAAE,IAACjJ,EAAIuI,EAAU,GAAfQ,KAAAE,IAAoBhJ,EAAIuI,EAAU,KAClD,GACPV,QAAQC,IAAI,YAAa9F,GACzB6F,QAAQC,IAAI9F,EAAM,gBARxB4G,EAAAK,OAAA,SASSN,EAAW,IATpB,wBAAAC,EAAApG,SAAA6F,OAxDa7G,MAAAC,KAAAC,WAAA,SAAAwH,IAAA,OAAAA,EAAAxJ,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAA/C,EAAAgD,KAoEb,SAAAsH,EAAwBb,EAAOC,EAAOvG,GAAtC,IAAAoH,EAAA,OAAAxH,EAAA/C,EAAAoD,KAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,UACiB,KAAXmE,EADN,CAAA8C,EAAAjH,KAAA,eAAAiH,EAAAJ,OAAA,wBAAAI,EAAAjH,KAAA,EAEuB6F,EAAcK,EAAOC,EAAOvG,GAFnD,WAAAqH,EAAA9G,KAAA,CAAA8G,EAAAjH,KAAA,gBAIUgH,EAAe1J,OAAO4J,OAAO,GAAIhK,IAC1B0C,IAAQ,EACrBkF,EAAakC,GANjBC,EAAAJ,OAAA,UAOW,GAPX,eAAAI,EAAAJ,OAAA,UASS,GATT,yBAAAI,EAAA7G,SAAA2G,OApEa3H,MAAAC,KAAAC,WAAA,SAgFE6H,IAhFF,OAAAC,EAAAhI,MAAAC,KAAAC,WAAA,SAAA8H,IAAA,OAAAA,EAAA9J,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAA/C,EAAAgD,KAgFb,SAAA4H,IAAA,IAAAnC,EAAAoC,EAAAC,EAAAjC,EAAA1D,EAAAW,EAAA,OAAA/C,EAAA/C,EAAAoD,KAAA,SAAA2H,GAAA,cAAAA,EAAAzH,KAAAyH,EAAAxH,MAAA,cACQkF,EAAUE,YAAIxB,EAAI,SAAUO,GADpCqD,EAAAxH,KAAA,EAEwByG,YAAOvB,GAASM,KAAK,SAACiC,GAAD,OAASA,EAAIvE,SAF1D,OAEQoE,EAFRE,EAAArH,KAGUoH,EAAiCD,EAAjCC,UAAWjC,EAAsBgC,EAAtBhC,QAAS1D,EAAa0F,EAAb1F,SACtBW,EAAemE,KAAKgB,MAAMpC,EAAUiC,GAC1C9C,EAAc,CAAE7C,WAAUW,iBAC1BkD,QAAQC,IAAInD,EAAc,uBAN5B,wBAAAiF,EAAApH,SAAAiH,OAhFajI,MAAAC,KAAAC,WAyFb,SAASkD,IACP4B,EAAU,IACVK,IACAF,GAAa,GACbI,GAAmB,GACnBG,EAAa,CACXb,OAAO,EACPD,OAAO,EACPD,MAAM,IAjGG,SAAA4D,IAAA,OAAAA,EAAArK,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAA/C,EAAAgD,KAqGb,SAAAmI,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxI,EAAA/C,EAAAoD,KAAA,SAAAoI,GAAA,cAAAA,EAAAlI,KAAAkI,EAAAjI,MAAA,cACQ6H,EAAYK,YAChBC,YAAWvE,EAAI,UACfwE,YAAM,UAAW,MAAM,IAH3BH,EAAAjI,KAAA,EAK2BqI,YAAQR,GALnC,cAKQC,EALRG,EAAA9H,KAMQ4H,EAAU,GAChBD,EAAWQ,QAAQ,SAAClD,GAElB,IAAAmD,EAAyCnD,EAAIlC,OAArCtB,EAAR2G,EAAQ3G,SAAU2F,EAAlBgB,EAAkBhB,UAAWjC,EAA7BiD,EAA6BjD,QAC7ByC,EAAQS,KAAK,CAAE5G,WAAUwB,WAAYkC,EAAUiC,GAAWkB,QAAQ,OAG9DT,EAAcD,EAAQW,KAAK,SAACjM,EAAGkM,GAAJ,OAAUlM,EAAE2G,UAAYuF,EAAEvF,YAb7D6E,EAAApB,OAAA,SAcSmB,GAdT,wBAAAC,EAAA7H,SAAAwH,OArGaxI,MAAAC,KAAAC,WAsHb,SAASqC,IACPgD,GAAmB,GACnBJ,GAAa,GAGf,OA/GA3F,oBAAU,WACO,KAAXuF,GAIJE,GAAe,GACfE,GAAa,IAJXF,GAAe,IAKhB,CAACF,IAEJvF,oBAAStB,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAA/C,EAAAgD,KAAC,SAAAC,IAAA,OAAAF,EAAA/C,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAEe1C,OAAOsL,KAAK1L,GAAW2L,MAC5C,SAAC5H,GAAD,OAAS/D,EAAU+D,KAHb,CAAAnB,EAAAE,KAAA,eAMNqE,GAAe,GACfoB,QAAQC,IAAI,iBAPN5F,EAAAE,KAAA,EAQA+E,IARA,OASNoC,IATM,wBAAArH,EAAAM,SAAAV,MAWP,CAACxC,IA4FFV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACoM,EAAD,MAECxE,EACC9H,EAAAC,EAAAC,cAACqM,EAAD,CAASrH,SArFf,SAAkBE,GAChBoH,YAAOb,YAAWvE,EAAI,UAAW,CAC/BhC,SAAUA,EACV2F,UAAWhC,cACXD,SAAS,IAERE,KAAK,SAACiC,GACLrD,EAAUqD,EAAIvF,IACduD,QAAQC,IAAI,gBAEbC,MAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MA2EGjE,kBAAmBA,IAC9C,KAEFL,GAAgBgD,GAAcI,EAM5B,KALFlI,EAAAC,EAAAC,cAACuM,EAAD3L,OAAA4J,OAAA,GACM1C,EADN,CAEEhC,aAAcA,EACdb,kBAAmBA,KAItB+C,EACClI,EAAAC,EAAAC,cAACwM,EAAD,CACErG,eA7IK,kBAAA8E,EAAAvI,MAAAC,KAAAC,YA8ILkD,aAAcA,IAEd,KAEJhG,EAAAC,EAAAC,cAACyM,EAAD,CACE5H,OAAO,4BACPtE,SApJO,SAAAmM,EAAAC,EAAAC,GAAA,OAAAxC,EAAA1H,MAAAC,KAAAC,YAqJPgC,YAAaA,EACbpE,UAAWA,MCzLnBqM,IAASC,OACPhN,EAAAC,EAAAC,cAACF,EAAAC,EAAMgN,WAAP,KACEjN,EAAAC,EAAAC,cAACgN,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.17643c8b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-header\">Where's Waldo</div>\r\n\r\n      <div className=\"images\">\r\n        <div className=\"nav-img-container\">\r\n          <img alt=\"\" className=\"nav-img\" src=\"./imgs/woof.jpg\"></img>\r\n          <div>Woof</div>\r\n        </div>\r\n        <div className=\"nav-img-container\">\r\n          <img alt=\"\" className=\"nav-img\" src=\"./imgs/odlaw.jpg\"></img>\r\n          <div>Odlaw</div>\r\n        </div>\r\n        <div className=\"nav-img-container\">\r\n          <img alt=\"\" className=\"nav-img\" src=\"./imgs/waldo.jpg\"></img>\r\n          <div>Waldo</div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst options = [\"waldo\", \"odlaw\", \"woof\"];\r\n\r\nfunction Selector({ makeMove, gameState }) {\r\n  const [selectorClass, setSelectorClass] = useState(\r\n    \"selector-content hidden-selector\"\r\n  );\r\n  const [cords, setCords] = useState({ x: 0, y: 0 });\r\n  const [showFound, setShowFound] = useState(false);\r\n  const [foundInfo, setFoundInfo] = useState();\r\n  const [foundClass, setFoundClass] = useState(\"found-alert not-found\");\r\n\r\n  useEffect(() => {\r\n    if (showFound) {\r\n      setTimeout(() => setShowFound(false), 1000);\r\n    }\r\n  }, [showFound]);\r\n\r\n  function updateCords(e) {\r\n    const [userX, userY] = [e.nativeEvent.offsetX, e.nativeEvent.offsetY];\r\n    setCords({ x: userX, y: userY });\r\n  }\r\n\r\n  const selectorStyle = {\r\n    left: cords[\"x\"] - 40,\r\n    top: cords[\"y\"] - 40,\r\n  };\r\n\r\n  function handleClick(e) {\r\n    // If the selector is already visible then hide it\r\n    if (!selectorClass.includes(\"hidden-selector\")) {\r\n      setSelectorClass(\"selector-content hidden-selector\");\r\n      return;\r\n    }\r\n\r\n    // Else show show the selector at the clicked position\r\n    setSelectorClass(\"selector-content\");\r\n    updateCords(e);\r\n  }\r\n\r\n  async function selectOption(e) {\r\n    const name = e.target.getAttribute(\"data-value\");\r\n    const result = await makeMove(cords[\"x\"], cords[\"y\"], name);\r\n    if (result) {\r\n      setFoundInfo(\"You found \" + name);\r\n      setFoundClass(\"found-alert\");\r\n    } else {\r\n      setFoundInfo(name + \" isn't there\");\r\n      setFoundClass(\"found-alert not-found\");\r\n    }\r\n    setShowFound(true);\r\n  }\r\n\r\n  const createStyle = (clicked) =>\r\n    clicked ? { pointerEvents: \"none\", backgroundColor: \"green\" } : {};\r\n\r\n  return (\r\n    <div className=\"selector-modal\" onClick={handleClick}>\r\n      {showFound ? (\r\n        <div className={foundClass} style={selectorStyle}>\r\n          {foundInfo}\r\n        </div>\r\n      ) : null}\r\n      <div className={selectorClass} style={selectorStyle}>\r\n        <div className=\"highlight\"></div>\r\n        <div className=\"options\">\r\n          {/* Loop through the options array and render each option to the dom */}\r\n          {options.map((option, index) => {\r\n            return (\r\n              <div\r\n                className=\"option\"\r\n                data-value={option}\r\n                onClick={selectOption}\r\n                key={index}\r\n                // if the character has been found change it's styling\r\n                style={createStyle(gameState[option])}\r\n              >\r\n                {option}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Selector;\r\n","import React from \"react\";\r\nimport Selector from \"./Selector\";\r\n\r\nfunction ImgContainer({ makeMove, gameStarted, gameState, imgUrl }) {\r\n  const style = gameStarted ? {} : { pointerEvents: \"none\" };\r\n\r\n  return (\r\n    <div className=\"img-container\" style={style}>\r\n      <Selector makeMove={makeMove} gameState={gameState} />\r\n      <img src={imgUrl} className=\"waldo-img\" alt=\"wheres waldo img\"></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImgContainer;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction SetUser({ timeUser, toggleLeaderboard }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [contentStyle, setContentStyle] = useState({});\r\n\r\n  function updateUsername(e) {\r\n    setUsername(e.target.value);\r\n  }\r\n\r\n  function hanldeUser(e) {\r\n    if (username === \"\") return;\r\n    setContentStyle({ pointerEvents: \"none\" });\r\n    e.target.textContent = \"Loading\";\r\n    timeUser(username);\r\n  }\r\n\r\n  return (\r\n    <div className=\"set-user\">\r\n      <div className=\"content\" style={contentStyle}>\r\n        <p>You will be timed when you click start</p>\r\n        <label htmlFor=\"user-name\">Username: </label>\r\n        <br></br>\r\n        <input type=\"text\" id=\"user-name\" onChange={updateUsername}></input>\r\n        <br></br>\r\n        <button className=\"start-btn\" onClick={hanldeUser}>\r\n          Start\r\n        </button>\r\n        <button className=\"show-leaderboard\" onClick={toggleLeaderboard}>\r\n          Leaderboard\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SetUser;\r\n","import React, { useEffect } from \"react\";\r\n\r\nfunction GameResult({\r\n  username,\r\n  secondsTaken,\r\n  startNewGame,\r\n  toggleLeaderboard,\r\n}) {\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"game-result\">\r\n      <div className=\"result-content\">\r\n        <div className=\"result-header\">Good Job {username}</div>\r\n        <div className=\"stat-container\">\r\n          You Took {secondsTaken} Seconds to Complete\r\n        </div>\r\n        <div className=\"btn-div\">\r\n          <button className=\"show-leaderboard\" onClick={toggleLeaderboard}>\r\n            Leaderboard\r\n          </button>\r\n          <button className=\"new-game\" onClick={startNewGame}>\r\n            New Game\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameResult;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Leaderboard({ getLeaderboard, startNewGame }) {\r\n  const [leaderboardData, setLeaderboardData] = useState([]);\r\n  const [boardStatus, setBoardStatus] = useState(\"Loading...\");\r\n  useEffect(async () => {\r\n    const data = await getLeaderboard();\r\n    if (data.length === 0) setBoardStatus(\"Leaderboard empty :(\");\r\n    setLeaderboardData(data);\r\n  }, []);\r\n  return (\r\n    <div className=\"leaderboard\">\r\n      <div className=\"leaderboard-content\">\r\n        <div className=\"top\">\r\n          <div className=\"header\">Leaderboard</div>\r\n          <button className=\"close-btn\" onClick={startNewGame}>\r\n            Close\r\n          </button>\r\n        </div>\r\n        {!leaderboardData.length ? <h1>{boardStatus}</h1> : null}\r\n        {leaderboardData.map((data, index) => {\r\n          return (\r\n            <div className=\"leaderboard-item\" key={index}>\r\n              <div>\r\n                <span className=\"rank\">{index + 1})</span> {data.username}\r\n              </div>\r\n              <div>{data.timeTaken}s</div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n","import React, { useEffect, useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport ImgContainer from \"./components/ImgContainer\";\nimport SetUser from \"./components/SetUser\";\nimport GameResult from \"./components/GameResult\";\nimport Leaderboard from \"./components/Leaderboard\";\n\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  serverTimestamp,\n  doc,\n  updateDoc,\n  getDoc,\n  query,\n  where,\n  getDocs,\n} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDPAG6GIZAvNy99fj5tHtjT5tm4uLIP5U4\",\n  authDomain: \"wheres-waldo-82794.firebaseapp.com\",\n  projectId: \"wheres-waldo-82794\",\n  storageBucket: \"wheres-waldo-82794.appspot.com\",\n  messagingSenderId: \"1001571650730\",\n  appId: \"1:1001571650730:web:d87da5dc2223f8c63314d3\",\n};\n\ninitializeApp(firebaseConfig);\n\nconst db = getFirestore();\n\nconst waldoPos = {\n  woof: \"4mX9Cb18EFXZQg9OHja4\",\n  odlaw: \"DQ77QmuGzTN8U2Gqffqg\",\n  waldo: \"LFemWDS9Z2V5JodNM2JR\",\n};\n\nfunction App() {\n  const [userId, setUserId] = useState(\"\");\n  const [gameStarted, setGameStarted] = useState(false);\n  const [showSetUp, setShowSetUp] = useState(true);\n  const [gameResult, setGameResult] = useState();\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\n  const [gameState, setGameState] = useState({\n    waldo: false,\n    odlaw: false,\n    woof: false,\n  });\n\n  useEffect(() => {\n    if (userId === \"\") {\n      setGameStarted(false);\n      return;\n    }\n    setGameStarted(true);\n    setShowSetUp(false);\n  }, [userId]);\n\n  useEffect(async () => {\n    // checks if every item of the gameState is set to true\n    const isGameFinished = Object.keys(gameState).every(\n      (key) => gameState[key]\n    );\n    if (isGameFinished) {\n      setGameStarted(false);\n      console.log(\"game finished\");\n      await setEndTime();\n      endGame();\n    }\n  }, [gameState]);\n\n  async function setEndTime() {\n    const userRef = doc(db, \"timing\", userId);\n    await updateDoc(userRef, {\n      endTime: serverTimestamp(),\n    })\n      .then(() => console.log(\"timer ended\"))\n      .catch((err) => console.log(err));\n  }\n\n  function timeUser(username) {\n    addDoc(collection(db, \"timing\"), {\n      username: username,\n      startTime: serverTimestamp(),\n      endTime: false,\n    })\n      .then((res) => {\n        setUserId(res.id);\n        console.log(\"user timed\");\n      })\n      .catch((err) => console.log(err));\n  }\n\n  async function checkPosition(userX, userY, name) {\n    const charId = waldoPos[name];\n    const charRef = doc(db, \"locations\", charId);\n    const charSnap = await getDoc(charRef);\n    const [x, y] = [charSnap.data()[\"x-cord\"], charSnap.data()[\"y-cord\"]];\n    const distance = Math.sqrt((x - userX) ** 2 + (y - userY) ** 2);\n    distance < 30\n      ? console.log(\"you found\", name)\n      : console.log(name, \"is not there\");\n    return distance < 30;\n  }\n\n  async function makeMove(userX, userY, name) {\n    if (userId === \"\") return;\n    const result = await checkPosition(userX, userY, name);\n    if (result) {\n      const newGameState = Object.assign({}, gameState);\n      newGameState[name] = true;\n      setGameState(newGameState);\n      return true;\n    }\n    return false;\n  }\n\n  async function endGame() {\n    const userRef = doc(db, \"timing\", userId);\n    const userDoc = await getDoc(userRef).then((res) => res.data());\n    const { startTime, endTime, username } = userDoc;\n    const secondsTaken = Math.round(endTime - startTime);\n    setGameResult({ username, secondsTaken });\n    console.log(secondsTaken, \"seconds to complete\");\n  }\n\n  function startNewGame() {\n    setUserId(\"\");\n    setGameResult();\n    setShowSetUp(true);\n    setShowLeaderboard(false);\n    setGameState({\n      waldo: false,\n      odlaw: false,\n      woof: false,\n    });\n  }\n\n  async function getLeaderboard() {\n    const resultRef = query(\n      collection(db, \"timing\"),\n      where(\"endTime\", \"!=\", false)\n    );\n    const resultDocs = await getDocs(resultRef);\n    const results = [];\n    resultDocs.forEach((doc) => {\n      // doc.data() is never undefined for query doc snapshots\n      const { username, startTime, endTime } = doc.data();\n      results.push({ username, timeTaken: (endTime - startTime).toFixed(2) });\n    });\n    // sorts the array from lowest to largest based on the time taken\n    const sortedArray = results.sort((a, b) => a.timeTaken - b.timeTaken);\n    return sortedArray;\n  }\n\n  function toggleLeaderboard() {\n    setShowLeaderboard(true);\n    setShowSetUp(false);\n  }\n\n  return (\n    <div className=\"container\">\n      <Navbar />\n\n      {showSetUp ? (\n        <SetUser timeUser={timeUser} toggleLeaderboard={toggleLeaderboard} />\n      ) : null}\n\n      {!gameStarted && !showSetUp && !showLeaderboard ? (\n        <GameResult\n          {...gameResult}\n          startNewGame={startNewGame}\n          toggleLeaderboard={toggleLeaderboard}\n        />\n      ) : null}\n\n      {showLeaderboard ? (\n        <Leaderboard\n          getLeaderboard={getLeaderboard}\n          startNewGame={startNewGame}\n        />\n      ) : null}\n\n      <ImgContainer\n        imgUrl=\"./imgs/wheres-waldo-1.jpg\"\n        makeMove={makeMove}\n        gameStarted={gameStarted}\n        gameState={gameState}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}